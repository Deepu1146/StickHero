/**
 * Stick class represents the extending stick in the Stick Hero game.
 * The stick can grow vertically, then rotate 90 degrees, and
 * is used to cross gaps between platforms.
 */
class Stick {
    field int x, y;           // Position of the stick base
    field int length;         // Current length of the stick
    field int angle;          // Current angle of the stick (0-90 degrees)
    field boolean isRotating; // Whether the stick is currently rotating
    field int swingDirection; // Direction for gentle swing animation (1 or -1)
    field int swingAngle;     // Current offset angle for swinging
    
    /** Constructs a new stick with default position */
    constructor Stick new() {
        let x = 0;
        let y = 0;
        let length = 0;
        let angle = 0;
        let isRotating = false;
        let swingDirection = 1;
        let swingAngle = 0;
        
        return this;
    }
    
    /** Constructs a new stick at the given position */
    constructor Stick newWithPosition(int Ax, int Ay) {
        let x = Ax;
        let y = Ay;
        let length = 0;
        let angle = 0;
        let isRotating = false;
        let swingDirection = 1;
        let swingAngle = 0;
        
        return this;
    }
    
    /** Sets the position of the stick */
    method void setPosition(int Ax, int Ay) {
        let x = Ax;
        let y = Ay;
        return;
    }
    
    /** Resets the stick to its initial state */
    method void reset() {
        let length = 0;
        let angle = 0;
        let isRotating = false;
        let swingDirection = 1;
        let swingAngle = 0;
        return;
    }
    
    /** Grows the stick */
    method void grow() {
        let length = length + 3; // Grow by 3 pixels each time
        return;
    }
    
    /** Returns the current length of the stick */
    method int getLength() {
        return length;
    }
    
    /** 
     * Rotates the stick and returns true if rotation is complete 
     */
    method boolean rotate() {
        if (~isRotating) {
            let isRotating = true;
        }
        
        // Increase angle by 5 degrees each update
        let angle = angle + 5;
        
        // Check if rotation is complete
        if (angle > 90) {
            let angle = 90;
            return true;
        }
        
        return false;
    }
    
    /**
     * Creates a gentle swinging motion when the game is over
     * This adds a subtle animation to the stick in game over state
     */
    method void gentleSwing() {
        // If the stick isn't fully rotated, rotate it first
        if (angle < 90) {
            do rotate();
            return;
        }
        
        // Add swing effect by slightly changing the angle
        let swingAngle = swingAngle + swingDirection;
        
        // Reverse direction when reaching swing limits
        if ((swingAngle > 10) | (swingAngle < -10)) {
            let swingDirection = -swingDirection;
        }
        
        return;
    }
    
    /** Draws the stick based on its current state with camera offset */
    method void draw(int cameraOffset) {
        var int x1, y1, x2, y2;
        var int xOffset, yOffset;
        var int effectiveAngle;
        var int screenX; // Stick position after camera offset
        
        do Screen.setColor(true);
        
        // Apply camera offset to stick position
        let screenX = x - cameraOffset;
        
        // Set start point (stick base)
        let x1 = Math.max(0, Math.min(screenX, 511));
        let y1 = Math.max(0, Math.min(y, 255));
        
        // Apply swing angle if stick is horizontal
        if (angle = 90) {
            let effectiveAngle = angle + swingAngle;
        } else {
            let effectiveAngle = angle;
        }
        
        if (effectiveAngle = 0) {
            // Draw vertical stick
            let x2 = x1; // Same x as base
            let y2 = Math.max(0, Math.min(y - length, 255));
        } else {
            // Calculate end point based on angle (rough approximation of rotation)
            // In a 90 degree rotation, the end point moves from (x, y-length) to (x+length, y)
            let xOffset = (length * effectiveAngle) / 90;
            let yOffset = (length * (90 - effectiveAngle)) / 90;
            
            // Make sure y-offset doesn't go below 0 for angles > 90 during swing
            if (effectiveAngle > 90) {
                let yOffset = 0;
            }
            
            let x2 = Math.max(0, Math.min(screenX + xOffset, 511));
            let y2 = Math.max(0, Math.min(y - yOffset, 255));
        }
        
        // Only draw the stick if it's on screen
        if ((x1 < 512) & (x2 > 0)) {
            // Draw the line
            do Screen.drawLine(x1, y1, x2, y2);
        }
        
        return;
    }
    
    /** Disposes this stick */
    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }
}